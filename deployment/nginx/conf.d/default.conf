# HTTP 重定向到 HTTPS
server {
    listen 80;
    server_name _;
    
    # 安全头
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-Content-Type-Options "nosniff" always;
    
    # 重定向到 HTTPS
    return 301 https://$host$request_uri;
}

# HTTPS 主配置
server {
    listen 443 ssl http2;
    server_name _;

    # SSL 配置
    ssl_certificate /etc/nginx/ssl/cert.pem;
    ssl_certificate_key /etc/nginx/ssl/key.pem;
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-AES128-SHA256:ECDHE-RSA-AES256-SHA384;
    ssl_prefer_server_ciphers off;
    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 10m;
    ssl_session_tickets off;
    ssl_stapling on;
    ssl_stapling_verify on;

    # 安全头
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload" always;
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-XSS-Protection "1; mode=block" always;

    # 上传文件大小限制 (支持大文件)
    client_max_body_size 100M;

    # 静态文件缓存策略 (优化)
    location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot|webp|avif)$ {
        expires 1y;
        add_header Cache-Control "public, immutable";
        add_header Vary Accept-Encoding;
        add_header X-Cache-Status "HIT";
        
        # 静态文件压缩
        gzip_static on;
        
        # 缓存控制
        location ~* \.(js|css)$ {
            expires 1y;
            add_header Cache-Control "public, immutable";
        }
        
        location ~* \.(png|jpg|jpeg|gif|webp|avif)$ {
            expires 1y;
            add_header Cache-Control "public, immutable";
        }
        
        location ~* \.(woff|woff2|ttf|eot)$ {
            expires 1y;
            add_header Cache-Control "public, immutable";
        }
    }

    # 大文件安全分离处理
    location /uploads/ {
        alias /var/www/uploads/;
        expires 1y;
        add_header Cache-Control "public, immutable";
        add_header X-Content-Type-Options nosniff;
        
        # 大文件检测和重定向
        location ~* \.(mp4|avi|mov|wmv|flv|mkv|webm|ogg)$ {
            # 视频文件重定向到临时目录
            try_files $uri @large_file_handler;
        }
        
        location ~* \.(zip|rar|7z|tar|gz|bz2)$ {
            # 压缩文件重定向到临时目录
            try_files $uri @large_file_handler;
        }
        
        # 图片文件缓存
        location ~* \.(jpg|jpeg|png|gif|webp|avif)$ {
            expires 1y;
            add_header Cache-Control "public, immutable";
            add_header X-Cache-Status "HIT";
        }
        
        # 安全：禁止执行上传的文件
        location ~* \.(php|jsp|asp|sh|py|pl|exe|bat|cmd)$ {
            deny all;
            return 403;
        }
    }

    # 大文件处理器
    location @large_file_handler {
        # 检查文件是否在临时目录
        if (-f /var/www/temp$uri) {
            alias /var/www/temp;
            expires 1h;
            add_header Cache-Control "public, max-age=3600";
            add_header X-Cache-Status "LARGE_FILE";
        }
        
        # 如果不在临时目录，返回404
        return 404;
    }

    # 临时文件访问 (大文件)
    location /temp/ {
        alias /var/www/temp/;
        expires 1h;
        add_header Cache-Control "public, max-age=3600";
        add_header X-Cache-Status "TEMP_FILE";
        
        # 限制访问频率
        limit_req zone=large_files burst=3 nodelay;
        
        # 安全：只允许特定文件类型
        location ~* \.(mp4|avi|mov|wmv|flv|mkv|webm|ogg|zip|rar|7z|tar|gz|bz2)$ {
            # 允许访问
        }
        
        # 其他文件类型拒绝访问
        location ~* \. {
            deny all;
            return 403;
        }
    }

    # API 代理 - 应用限流 (优化)
    location /api/ {
        # 限流配置
        limit_req zone=api burst=30 nodelay;
        
        proxy_pass http://app_backend;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_cache_bypass $http_upgrade;
        
        # 超时配置 (优化)
        proxy_read_timeout 300s;
        proxy_connect_timeout 60s;
        proxy_send_timeout 300s;
        
        # 缓冲配置 (优化)
        proxy_buffering on;
        proxy_buffer_size 4k;
        proxy_buffers 4 4k;
        proxy_busy_buffers_size 8k;
        
        # 错误处理
        proxy_intercept_errors on;
        error_page 502 503 504 /50x.html;
    }

    # 登录接口限流 (优化)
    location /api/auth/ {
        limit_req zone=login burst=10 nodelay;
        
        proxy_pass http://app_backend;
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    # 文件上传接口限流 (优化)
    location /api/upload/ {
        limit_req zone=upload burst=5 nodelay;
        
        proxy_pass http://app_backend;
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # 上传超时 (支持大文件)
        proxy_read_timeout 600s;
        proxy_send_timeout 600s;
    }

    # 健康检查
    location /health {
        proxy_pass http://app_backend/api/health;
        access_log off;
        add_header Cache-Control "no-cache, no-store, must-revalidate";
    }

    # 监控端点
    location /metrics {
        proxy_pass http://app_backend/api/metrics;
        access_log off;
        add_header Cache-Control "no-cache, no-store, must-revalidate";
    }

    # SPA 路由处理
    location / {
        root /var/www/dist;
        try_files $uri $uri/ /index.html;
        
        # 缓存控制
        location ~* \.(html)$ {
            expires -1;
            add_header Cache-Control "no-cache, no-store, must-revalidate";
            add_header X-Cache-Status "NO-CACHE";
        }
        
        location ~* \.(js|css)$ {
            expires 1y;
            add_header Cache-Control "public, immutable";
            add_header X-Cache-Status "HIT";
        }
        
        # 静态资源缓存
        location ~* \.(png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot)$ {
            expires 1y;
            add_header Cache-Control "public, immutable";
            add_header X-Cache-Status "HIT";
        }
    }

    # 错误页面
    error_page 404 /index.html;
    error_page 500 502 503 504 /50x.html;
    
    location = /50x.html {
        root /usr/share/nginx/html;
        internal;
    }

    # 禁止访问隐藏文件
    location ~ /\. {
        deny all;
        access_log off;
        log_not_found off;
        return 403;
    }

    # 禁止访问敏感文件
    location ~* \.(env|log|sql|md|txt|conf|ini|bak|backup|old|tmp|temp)$ {
        deny all;
        access_log off;
        log_not_found off;
        return 403;
    }

    # 禁止访问系统文件
    location ~* /(\.htaccess|\.htpasswd|\.user\.ini|\.git|\.svn|\.hg|\.bzr|\.cvs)$ {
        deny all;
        access_log off;
        log_not_found off;
        return 403;
    }

    # 安全：禁止访问 PHP 文件
    location ~* \.php$ {
        deny all;
        return 403;
    }

    # 安全：禁止访问配置文件
    location ~* \.(json|xml|yaml|yml|toml)$ {
        deny all;
        return 403;
    }
}
