# ========================================
# Biubiustar Ultra 环境变量配置
# ========================================
# 
# 重要说明：
# 1. 缓存配置可以通过管理后台或API动态修改，无需重启服务
# 2. 环境配置、安全配置等需要重启服务才能生效
# 3. 动态配置会持久化到数据库，重启后自动加载
# ========================================

# ========================================
# 🌍 环境配置 (Environment Configuration)
# ========================================
# NODE_ENV: 运行环境，影响基础配置策略
# - development: 开发环境，启用调试功能
# - production: 生产环境，优化性能和安全
# - test: 测试环境，禁用缓存便于测试
NODE_ENV=development          # 开发环境：development，生产环境：production

# PORT: 后端服务端口号
# 注意：修改后需要重启服务
PORT=3001                    # 开发环境：3001，生产环境：3000 或使用反向代理

# FRONTEND_URL: 前端应用URL，用于邮件重定向等
# 注意：修改后需要重启服务
FRONTEND_URL=http://localhost:5173    # 开发环境：localhost，生产环境：https://yourdomain.com

# ========================================
# 🔐 Supabase 配置 (必需配置)
# ========================================
# 这些配置影响数据库连接，修改后需要重启服务
SUPABASE_URL=https://powzuwgzbmpnqamchdma.supabase.co
SUPABASE_ANON_KEY=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6InBvd3p1d2d6Ym1wbnFhbWNoZG1hIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NTUwOTI0MDgsImV4cCI6MjA3MDY2ODQwOH0.PKigFNCVQWUbz4CtyeOS2ohF876q7nUGiWsLWmijtGc
SUPABASE_SERVICE_ROLE_KEY=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6InBvd3p1d2d6Ym1wbnFhbWNoZG1hIiwicm9sZSI6InNlcnZpY2Vfcm9sZSIsImlhdCI6MTc1NTA5MjQwOCwiZXhwIjoyMDcwNjY4NDA4fQ.CJiTdPp8Afrv9C0eewo4YIwik54i75SEpSgZEp09o38

# 前端 Supabase 配置 (VITE_ 前缀表示只在构建时可用)
VITE_SUPABASE_URL=https://powzuwgzbmpnqamchdma.supabase.co
VITE_SUPABASE_ANON_KEY=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6InBvd3p1d2d6Ym1wbnFhbWNoZG1hIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NTUwOTI0MDgsImV4cCI6MjA3MDY2ODQwOH0.PKigFNCVQWUbz4CtyeOS2ohF876q7nUGiWsLWmijtGc

# ========================================
# 🔑 JWT 配置
# ========================================
# 生产环境必须更换为强密钥，修改后需要重启服务
JWT_SECRET=your-super-secret-jwt-key-change-this-in-production    # 生产环境必须生成强密钥：openssl rand -hex 32

# ========================================
# 🚀 缓存配置 (Cache Configuration)
# ========================================
# ⚠️  重要：这些是初始默认配置，可以通过管理后台动态修改！
# 修改后立即生效，无需重启服务，配置会持久化到数据库
#
# 🌐 浏览器缓存说明：
# 用户在浏览器中看到最新数据的时间主要由以下因素决定：
# 1. 前端 apiCache 服务：默认TTL 5分钟 (src/services/apiCache.ts)
# 2. 后端API缓存：CACHE_API_TTL 控制 (默认1分钟)
# 3. HTTP响应头：部分API设置 Cache-Control: no-cache 强制刷新
# 4. 浏览器原生缓存：静态资源缓存24小时，动态数据依赖上述配置
# 注意：服务端缓存失效后，用户最多需要等待前端缓存TTL时间才能看到最新数据

# 全局缓存开关
ENABLE_CACHE=true                # 开发环境：true，生产环境：true (性能关键)
ENABLE_CACHE_LOGGING=true        # 开发环境：true，生产环境：false (减少日志)

# ========================================
# 缓存初始默认配置 
# ========================================
# 用户缓存 - 初始默认值
# 🔍 影响浏览器数据更新：用户信息、个人资料等数据的缓存时长
CACHE_USER_MAX_SIZE=100        # 开发环境：100项，生产环境：2000项
CACHE_USER_TTL=300000          # 开发环境：5分钟，生产环境：30分钟 (影响用户信息更新延迟)
CACHE_USER_CLEANUP=300000      # 初始默认：5分钟
CACHE_USER_ENABLED=true        # 🌐 决定是否启用用户数据缓存，关闭后用户信息实时更新

# 内容缓存 - 初始默认值
# 🔍 影响浏览器数据更新：帖子、评论、活动等内容数据的缓存时长
CACHE_CONTENT_MAX_SIZE=200     # 开发环境：200项，生产环境：5000项
CACHE_CONTENT_TTL=120000       # 开发环境：2分钟，生产环境：10分钟 (影响内容更新延迟)
CACHE_CONTENT_CLEANUP=120000   # 初始默认：2分钟
CACHE_CONTENT_ENABLED=true     # 🌐 决定是否启用内容数据缓存，关闭后内容实时更新

# 统计缓存 - 初始默认值
# 🔍 影响浏览器数据更新：点赞数、评论数、浏览量等统计数据的缓存时长
CACHE_STATS_MAX_SIZE=50        # 初始默认：50项
CACHE_STATS_TTL=30000          # 初始默认：30秒 (影响统计数据更新延迟)
CACHE_STATS_CLEANUP=30000      # 初始默认：1分钟
CACHE_STATS_ENABLED=true       # 🌐 决定是否启用统计数据缓存，关闭后统计数据实时更新

# 配置缓存 - 初始默认值
CACHE_CONFIG_MAX_SIZE=20       # 初始默认：20项
CACHE_CONFIG_TTL=600000        # 初始默认：10分钟
CACHE_CONFIG_CLEANUP=300000    # 初始默认：5分钟
CACHE_CONFIG_ENABLED=true

# 会话缓存 - 初始默认值
CACHE_SESSION_MAX_SIZE=50      # 初始默认：50项
CACHE_SESSION_TTL=900000       # 初始默认：15分钟
CACHE_SESSION_CLEANUP=300000   # 初始默认：5分钟
CACHE_SESSION_ENABLED=true

# API缓存 - 初始默认值
# 🔍 影响浏览器数据更新：API响应的缓存时长，直接影响前端数据刷新
# ⚠️  关键配置：此配置与前端 apiCache 服务配合，共同决定用户看到最新数据的时间
CACHE_API_MAX_SIZE=100         # 初始默认：100项
CACHE_API_TTL=60000            # 初始默认：1分钟 (🌐 主要影响因素：API响应缓存时长)
CACHE_API_CLEANUP=120000       # 初始默认：2分钟
CACHE_API_ENABLED=true         # 🌐 决定是否启用API缓存，关闭后所有API请求实时响应

# ========================================
# 🛡️ 安全配置 (Security Configuration)
# ========================================
# 这些配置影响安全策略，修改后需要重启服务

# 会话密钥
SESSION_SECRET=your-random-session-secret-here    # 生产环境必须生成强密钥：openssl rand -hex 32

# CORS 配置
CORS_ORIGIN=http://localhost:3000,http://localhost:3001    # 开发环境：localhost，生产环境：https://yourdomain.com

# 文件上传配置
UPLOAD_MAX_SIZE=52428800       # 开发环境：50MB，生产环境：100MB (根据服务器性能)
# 文件上传配置说明：
# - 帖子发布：支持图片和视频，最多9个文件，单个文件最大50MB
# - 头像上传：支持图片，最多1个文件，单个文件最大5MB
# - 活动图片：支持图片，最多3个文件，单个文件最大10MB
# 注意：这些配置与前端显示保持一致，修改后需要重启服务
UPLOAD_ALLOWED_TYPES=image/jpeg,image/png,image/gif,image/webp,video/mp4

# 速率限制配置
RATE_LIMIT_WINDOW_MS=900000    # 15分钟
RATE_LIMIT_MAX_REQUESTS=100    # 开发环境：100次，生产环境：50次 (更严格)

# ========================================
# 📊 监控和日志配置
# ========================================
# 这些配置支持热重载，修改后无需重启服务

# 日志级别
LOG_LEVEL=debug                # 开发环境：debug，生产环境：info 或 warn

# 缓存监控开关
CACHE_MONITOR_ENABLED=true
CACHE_MONITOR_VERBOSE=true        # 开发环境：true，生产环境：false (减少日志)

# 性能监控
PERFORMANCE_MONITOR_ENABLED=true

# ========================================
# 🛠️ 开发环境特定配置
# ========================================
# 这些配置只在开发环境中使用，生产环境会自动禁用

# 调试模式
DEBUG=true                     # 开发环境：true，生产环境：false (安全要求)
HOT_RELOAD=true               # 开发环境：true，生产环境：false (性能要求)

# 缓存预热
CACHE_WARMUP_ENABLED=true
CACHE_WARMUP_INTERVAL=300000

# 缓存失效测试
CACHE_INVALIDATION_TEST_ENABLED=true  # 开发环境：true，生产环境：false (安全要求)

# ========================================
# 📧 邮件服务配置 (可选)
# ========================================
# 邮件服务用于发送验证邮件、通知等
# 取消注释并填写正确的配置信息即可启用

# Gmail SMTP 配置示例
# SMTP_HOST=smtp.gmail.com
# SMTP_PORT=587
# SMTP_USER=your_email@gmail.com
# SMTP_PASS=your_app_password

# ========================================
# 🔄 配置管理说明
# ========================================
# 
# 配置分类和生效方式：
# 
# 1. 🔄 动态配置 (无需重启，立即生效)
#    - 所有缓存参数 (maxSize, TTL, cleanupInterval)
#    - 监控开关 (CACHE_MONITOR_ENABLED, LOG_LEVEL)
#    - 调试开关 (DEBUG, CACHE_MONITOR_VERBOSE)
#    - 通过管理后台或API修改，自动持久化到数据库
# 
# 2. 🔄 热重载配置 (无需重启，立即生效)
#    - 日志级别 (LOG_LEVEL)
#    - 监控详细程度 (CACHE_MONITOR_VERBOSE)
#    - 调试模式 (DEBUG)
# 
# 3. ⚠️  需要重启的配置
#    - 环境配置 (NODE_ENV, PORT, FRONTEND_URL)
#    - 数据库配置 (SUPABASE_URL, SUPABASE_ANON_KEY)
#    - 安全配置 (JWT_SECRET, SESSION_SECRET)
#    - 文件上传配置 (UPLOAD_MAX_SIZE, UPLOAD_ALLOWED_TYPES)
#    - 速率限制配置 (RATE_LIMIT_*)
# 
# 4. 📱 管理方式
#    - 管理后台：/admin/settings/cache
#    - API接口：/api/admin/settings/cache
#    - 通用接口：/api/cache/configs/:instanceType
# 
# 5. 💾 配置持久化
#    - 动态配置自动保存到数据库 cache_configs 表
#    - 服务重启后自动加载保存的配置
#    - 支持配置版本管理和回滚
# 
# 6. 🎯 最佳实践
#    - 开发环境：使用较小的缓存和较短的TTL，便于调试
#    - 生产环境：通过管理后台调整到最优配置
#    - 监控缓存命中率，保持在80%以上
#    - 定期检查内存使用情况，避免内存溢出
# 
# ========================================

# ========================================
